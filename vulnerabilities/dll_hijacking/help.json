{
  "launch_notes": "This is the vulnerability [DLL Hijacking]\nThe program 'office.exe' will open a DOC file 'C/NewFolder/test.doc' and will load a DLL 'target.dll'.\nYour mission is to replace the 'target.dll' to 'trojan.dll' so that the EXE will call 'trojan.dll' instead of 'target.dll'.\nEnjoy yourself!\n---- H.G.",
  "launch_tips": "- You have *NO* Admin-Authority.\n- SafeDllSearchMode = 0.\n- The target DLL is not in the 'KnownDLLs (HKEY)'.\n- The target DLL is not in the '16-bit system directory'.\n- The PATH environment variable is stored in 'C/SYSPATH.SYS', which can be opened by 'cat'.",
  "system": {
    "platform": "Windows",
    "version": "10"
  },
  "-knowledge": "# What is DLL Hijacking?\nDLL hijacking is a method of injecting malicious code into an application by exploiting the way some Windows applications search and load Dynamic Link Libraries (DLL).\nOnly Microsoft operating systems are susceptible to DLL hijacks.\nBy replacing a required DLL file with an infected version and placing it within the search parameters of an application, the infected file will be called upon when the application loads, activating its malicious operations.\nFor a DLL hijack to be successful, a victim needs to load an infected DLL file from the same directory as the targeted application.\nIf applications that are automatically loaded upon startup are compromised with a tainted DLL file, cybercriminals will be granted access to the infected computer whenever it loads.\nDLL hijacking is not an innovative cyberattack method. It has been in circulation among cybercriminals since Windows 2000 launched.\n\n# What are DLL Files?\nDLL files, or Dynamic Link Library files, contain the resources an application needs to run successfully. These could include images and a library of executable functions.\nDLL files cannot be opened by end-users, they can only be opened by their associated application, which usually happens when the application starts up.\nWindows systems require DLL files to understand how to use their resources, the host computer memory, and hard drive space most efficiently.\nDLL files usually end with a .dll extension, but some could end in .drv, .drov and even .exe.\nA single DLL file could run multiple programs, so multiple programs could potentially be comprised in a DLL hijacking attack.\n\n# How Does DLL Hijacking Work?\nFor a DLL hijacking attack to be successful, a Windows application needs to be tricked into loading an infected DLL file instead of the legitimate DLL.\nBy exploiting the publicized DLL search order of Microsoft applications, this trickery is relatively simple to execute.\nThe standard DLL search order of Microsoft applications depends upon whether safe DLL search is enabled.\nWhen safe DLL search mode is enabled, applications search for required DLL files in the following order:\n 1.The directory from which the application is loaded.\n 2.The system directory.\n 3.The 16-bit system directory.\n 4.The Windows directory.\n 5.The current directory.\n 6.The directories that are listed in the PATH environment variable.\nWhen safe DLL search mode is disabled, the search order is as follows:\n 1.The directory from which the application is loaded.\n 2.The current directory.\n 3.The system directory.\n 4.The 16-bit directory.\n 5.The Windows directory\n 6.The directory listed in the PATH environment variable.\nThe difference between the two search modes is the order in which the user's current directory is searched, it's slightly elevated in the hierarchy when safe search is disabled.\nWhen safe search is disabled, the user's current directory is slightly elevated in the search order.\nWindows applications will default to any one of the above DLL search protocols if an application does not specify the full path of associated DLL files.\nThis is the exploit that makes DLL hacking possible.\nFor example, if a Windows application requires a DLL file located in the system directory C:\\Windows\\System32 but there are no instructions in its code to search in this explicit location, the application will work through a DLL search order to locate the file.\nRegardless of whether or not safe search is enabled, the directory from which the application is launched is the first location that is searched.\nIf a cybercriminal deposits an infected DLL file in this location, the application will open it instead of the original because its location was searched first, before the system directory.\nThis technique is also known as DLL search order hijacking.",
  "-fix-situation": "fixed by WindowsXP SP2"
}