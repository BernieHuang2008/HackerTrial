{
  "launch_notes": "This is the vulnerability [CVE-1999-0012].\nYou are required to steal a chat history from the game HackNet. The history is stored in 'www/cgi-bin/hacknet_irc8661.txt'.\nNotice that the web server will probably not allow you to even access the folder!\nGet it and copy to the 'HackerWorkspace', renamed to 'chat_his.txt' for checking.",
  "launch_tips": "- Note that because of the HackerTrial system, we have to use `_` instead of `~` for the 8dot3 short name.",
  "system": {
    "platform": "Windows",
    "version": "NT Web Server"
  },
  "-knowledge": {
    "Details": "All Win32 Microsoft operating systems can associate both a short and a long file name with a file. For backward compatibility with DOS, the short name is restricted to a length of 8 characters and an extension of 3 characters (\"8.3-compliant\" format). The long name is not restricted to the 8.3-compliant format, but is restricted to a total length of 255 characters. Windows NT and Windows 95 Web servers create lists of restricted file names for restricted files on the server. However, because these lists do not contain any short file names of the files, restricted files can still be accessed through their short file name. In some cases, when a URL is requested using the short file name, the Web server can apply different configuration settings to the request (including SSL encryption requirements, IP address restriction requirements, and PICS ratings). This could enable an attacker to gain access to unauthorized files.",
    "8dot3 Name": "Like most file systems these days, Windows lets you have rather long filenames. But it was not always so! When Microsoft first bought what was to become DOS for the original IBM PC, it used filenames consisting of 8 characters, a period and then a 3 character extension (8dot3). For example, FILENAME.EXT. This naming convention came over from CP/M (Control Program for Microcomputers) and this naming convention was also used by Atari 8-bit computer DOS and Atari ST computers (which actually used the same DOS file format as PCs).\nDOS continued to use these 8dot3 names through the first versions of Windows, including the one that became super-popular: Windows 3.1. But other systems such as Macintosh, OS/2 and Unix used longer filenames. For Windows 95, Microsoft also wanted to add long filename support, but they needed to do it in such a way that software that relied on the old 8dot3 filenames would still continue to work.\nThus, the 8dot3 filename aliases were born. Each time a file was created, an hidden alias for an 8dot3 equivalent would also be created. For example, if you create a file with the name “My Long Filename.txt”, then the shortened 8dot3 alias would be “MYLONG~1.TXT”.\nThe rules of 8dot3 short name are provided:\n - Names which match the DOS-short-filename rule remain unchanged.\n - Spaces in long file names will be removed.\n - If the length of the long file name after removing the space is greater than 8 characters, the first 6 characters are taken, and the last two characters are replaced by '~#', where '#' is a number, and the number is extended according to the number of file names with the same number of the first six characters. If the number exceeds 10, the first 5 characters are taken, and the last three characters are replaced with '~##', where '##' is two digits, and if the number is greater than 100, it is also replaced according to this rule.\n   e.g. 'abcd12345.abc' --> 'abcd12~1.abc'\n - For using multiple '.' For separated long file names, take the leftmost paragraph as the short file name and the first three characters of the rightmost paragraph as the extension.\n   e.g. 'a.b.c.defg' --> 'a.def'\n - If there are characters that cannot be read by the old OS or program, replace them with '_'.",
    "How to fix": "Apply the latest Windows NT 4.0 Service Pack (SP4 or later), available from the Windows NT Service Packs Web page. See References.\n— OR —\nDisable the 8.3 file name creation in the Windows NT registry. Choosing to disable 8.3 file name creation increases both security and performance on the Web server, but it can cause problems when running 16-bit programs.\nTo disable 8.3 file name creation, enable the NtfsDisable8dot3NameCreation registry entry:\nCAUTION: Use Registry Editor at your own risk. Any change using Registry Editor may cause severe and irreparable damage and may require you to reinstall your operating system. Internet Security Systems cannot guarantee that problems caused by the use of Registry Editor can be solved.\n 1.Verify that no 16-bit applications are used on the Web site. If you require 16-bit applications, you may still apply the fix if all of the paths and files referenced meet the 8.3 naming convention.\n 2.Using Registry Editor, find the HKLM\\System\\CurrentControlSet\\Control\\FileSystem registry key.\n 3.Select Edit -> New -> DWORD Value. A new registry entry is created.\n 4.Name the new registry entry \"NtfsDisable8dot3NameCreation\" . The value should be set to 1."
  },
  "-fix-situation": "Microsoft has released a server pack (Windows NT 4.0 Service Pack, aka. SP4) to fix this vulnerability. "
}